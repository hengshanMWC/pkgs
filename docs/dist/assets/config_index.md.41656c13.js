import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.bfdd83ff.js";const u=JSON.parse('{"title":"配置索引","description":"","frontmatter":{},"headers":[],"relativePath":"config/index.md","filePath":"config/index.md"}'),o={name:"config/index.md"},p=l(`<h1 id="配置索引" tabindex="-1">配置索引 <a class="header-anchor" href="#配置索引" aria-label="Permalink to &quot;配置索引&quot;">​</a></h1><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">DefaultParams</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">mode</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Mode</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ExecuteCommandConfig</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">extends</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">DefaultParams</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">packagesPath</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;">[] </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">undefined</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">CommandVersionParams</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">publish</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">CommandPublishParams</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">CommandRunParams</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PluginData</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>通过类型提示编写配置</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// pkgs.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@abmao/pkgs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#BABED8;">)</span></span></code></pre></div><h2 id="配置读取" tabindex="-1">配置读取 <a class="header-anchor" href="#配置读取" aria-label="Permalink to &quot;配置读取&quot;">​</a></h2><p>支持的配置方式如下:</p><ul><li>根目录 <ul><li>pkgs.config.ts</li><li>pkgs.config.js</li><li>pkgs.config.cjs</li><li>pkgs.config.mjs</li><li>pkgs.config.json</li></ul></li><li>package.json的字段 <ul><li>pkgs</li></ul></li></ul><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h2><h3 id="packagespath" tabindex="-1">packagesPath <a class="header-anchor" href="#packagespath" aria-label="Permalink to &quot;packagesPath&quot;">​</a></h3><ul><li><strong>类型：</strong> string | string[] | undefined</li><li><strong>默认值：</strong> &#39;packages/*&#39;</li></ul><p>工作区</p><h3 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;mode&quot;">​</a></h3><ul><li><strong>类型：</strong> &#39;sync&#39; | &#39;diff&#39;</li><li><strong>默认值：</strong> &#39;sync&#39;</li></ul><p>分别对应 lerna 的固定模式(Fixed)或独立模式(Independent)</p><h3 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;push&quot;">​</a></h3><ul><li><strong>类型：</strong> boolean</li><li><strong>默认值：</strong> true</li></ul><p>version 和 publish 后是否需要推送到远程仓库</p><h3 id="version" tabindex="-1">version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;version&quot;">​</a></h3><p>关于 version 命令配置</p><h4 id="version-mode" tabindex="-1">version.mode <a class="header-anchor" href="#version-mode" aria-label="Permalink to &quot;version.mode&quot;">​</a></h4><ul><li><strong>类型：</strong> &#39;sync&#39; | &#39;diff&#39;</li><li><strong>默认值：</strong> &#39;sync&#39;</li></ul><p>优先级比 mode 高</p><h4 id="version-message" tabindex="-1">version.message <a class="header-anchor" href="#version-message" aria-label="Permalink to &quot;version.message&quot;">​</a></h4><ul><li><strong>类型：</strong> string</li><li><strong>默认值：</strong> &#39;chore: version %s&#39;</li></ul><p>version 成功后，会进行一次 <code>git commit</code> ，你可以自定义它的 message 。%s 是内部基于包与版本生成的文案</p><h4 id="version-push" tabindex="-1">version.push <a class="header-anchor" href="#version-push" aria-label="Permalink to &quot;version.push&quot;">​</a></h4><ul><li><strong>类型：</strong> boolean</li><li><strong>默认值：</strong> true</li></ul><p>优先级比 mode 高</p><h3 id="publish" tabindex="-1">publish <a class="header-anchor" href="#publish" aria-label="Permalink to &quot;publish&quot;">​</a></h3><p>关于 publish 命令配置</p><h4 id="publish-mode" tabindex="-1">publish.mode <a class="header-anchor" href="#publish-mode" aria-label="Permalink to &quot;publish.mode&quot;">​</a></h4><ul><li><strong>类型：</strong> &#39;sync&#39; | &#39;diff&#39;</li><li><strong>默认值：</strong> &#39;sync&#39;</li></ul><p>优先级比 mode 高</p><h4 id="publish-push" tabindex="-1">publish.push <a class="header-anchor" href="#publish-push" aria-label="Permalink to &quot;publish.push&quot;">​</a></h4><ul><li><strong>类型：</strong> boolean</li><li><strong>默认值：</strong> true</li></ul><p>优先级比 mode 高</p><h3 id="run" tabindex="-1">run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;run&quot;">​</a></h3><p>关于 run 命令配置</p><h4 id="run-type" tabindex="-1">run.type <a class="header-anchor" href="#run-type" aria-label="Permalink to &quot;run.type&quot;">​</a></h4><ul><li><strong>类型：</strong> &#39;all&#39; | &#39;work&#39; | &#39;stage&#39; | &#39;repository&#39;</li><li><strong>默认值：</strong> &#39;all&#39;</li></ul><p><code>all[全部] | work（工作区） | stage（暂存区） | repository（版本库）</code>,不同模式对应不同的diff区域对比，并且会分析你的包顺序，智能运行你的命令</p><h4 id="run-mode" tabindex="-1">run.mode <a class="header-anchor" href="#run-mode" aria-label="Permalink to &quot;run.mode&quot;">​</a></h4><ul><li><strong>类型：</strong> &#39;sync&#39; | &#39;diff&#39;</li><li><strong>默认值：</strong> &#39;sync&#39;</li></ul><p>优先级比 mode 高</p><h5 id="run-dag" tabindex="-1">run.DAG <a class="header-anchor" href="#run-dag" aria-label="Permalink to &quot;run.DAG&quot;">​</a></h5><ul><li><strong>类型：</strong> boolean</li><li><strong>默认值：</strong> true</li></ul><p>我依赖的包是否做拓扑排序，依次执行</p><p>例如：<code>pkgs run build</code>，构建之前，需要先构建我依赖的包，从而才能正确构建当前包，不然我依赖的包如果没有构建物，会导致构建失败</p><h5 id="run-serial" tabindex="-1">run.serial <a class="header-anchor" href="#run-serial" aria-label="Permalink to &quot;run.serial&quot;">​</a></h5><ul><li><strong>类型：</strong> boolean</li><li><strong>默认值：</strong> true</li></ul><p>命令是否串行执行，否则并行</p><p>例如：<code>pkgs run build</code>，构建之前，需要根据依赖关系依次执行</p><h3 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;plugins&quot;">​</a></h3><p>插件入口，支持函数、路径、模块名</p><h4 id="类型-1" tabindex="-1">类型 <a class="header-anchor" href="#类型-1" aria-label="Permalink to &quot;类型&quot;">​</a></h4><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">BasePluginData</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">extends</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#BABED8;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 插件唯一标识</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 命令</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 详情</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">PluginOption</span><span style="color:#BABED8;">[] </span><span style="color:#676E95;font-style:italic;">// 选择命令</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">allowUnknownOption</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 是否允许传输未定义的 options 命令参数</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">action</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">context</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 执行逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">PluginData</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Readonly</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BasePluginData</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">PluginOption</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#BABED8;"> [</span><span style="color:#FFCB6B;">flags</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">description</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">defaultValue</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#BABED8;">]</span></span></code></pre></div>`,57),e=[p];function t(r,c,i,y,B,F){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{u as __pageData,d as default};
